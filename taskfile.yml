version: '3'

env:
  CONFIG_PATH: '{{.PWD}}/config'
  BREWFILE_PATH: '{{.CONFIG_PATH}}/brew/Brewfile'
  NIX_DARWIN_FLAKE_PATH: '{{.CONFIG_PATH}}/nix/.config/nix-darwin'

dotenv: ['.env', '{{.ENV}}/.env.', '{{.HOME}}/.env']

tasks:
  default:
    desc: List tasks (default)
    cmds:
      - cmd: task -l
        silent: true

  brew:install:
    desc: Installs brew (https://brew.sh/)
    cmds:
      - /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

  brew:freeze:
    desc: Creates/overwrites a brewfile based on current brew config (like pip freeze)
    cmds:
      - brew bundle dump --force --file='{{.BREWFILE_PATH}}'

  brew:bundle:check:
    desc: Installs everything specified in a Brewfile and uninstall what's installed but not listed in the file
    cmds:
      - brew bundle check --file='{{.BREWFILE_PATH}}'

  brew:bundle:install:
    desc: Installs everything specified in a Brewfile
    cmds:
      - brew bundle install --file='{{.BREWFILE_PATH}}'

  brew:bundle:cleanup:
    desc: Uninstall all dependencies not listed from the Brewfile.
    cmds:
      - brew bundle cleanup --force --file='{{.BREWFILE_PATH}}'

  zsh:create-powerlevel10k-symlink:
    desc: Creates a symlink for powerlevel10k in the zsh directory.
    cmds:
      - mkdir -p config/zsh/.oh-my-zsh/custom/themes || true
      - ln -sf ../../../../powerlevel10k config/zsh/.oh-my-zsh/custom/themes/powerlevel10k

  stow:stow:
    desc: Stows the dotfiles in the local home dir
    cmds:
      - task: git:submodules:update
      - for:
          - aichat
          - nano
          - yabai
          - borders
          - skhd
          - zsh
          - kitty
          - nvim
          - lsd
          - code
          - task
          - tmux
          - git
          - alacritty
          - ghostty
          - nix
        cmd: stow {{.CLI_ARGS}} --dir={{.CONFIG_PATH}} --target=$HOME {{ .ITEM }}

  stow:simulate:
    desc: Simulates the stowing of dotfiles in the local home dir (no harm done)
    cmds:
      - task: stow:stow
        vars: { CLI_ARGS: '-nSv' }

  stow:unstow:
    desc: Unstows the dotfiles in the local home dir
    cmds:
      - task: stow:stow
        vars: { CLI_ARGS: '-D' }

  git:submodules:update:
    desc: Initialize submodules
    cmds:
      - git submodule update --init --recursive
      - task: zsh:create-powerlevel10k-symlink

  nix:install:
    desc: Installs Nix
    cmds:
      - curl -L https://nixos.org/nix/install | sh

  nix:flake:init:nix-darwin:
    desc: Initializes nix-darwin flake, as per https://youtu.be/Z8BL8mdzWHI?si=azkz7EwYHTEUBCz3
    dir: '{{.NIX_DARWIN_FLAKE_PATH}}'
    cmds:
      - nix flake init -t nix-darwin --extra-experimental-features "nix-command flakes"
      - sed -i '' "s/simple/$(scutil --get LocalHostName)/" flake.nix
  
  nix:flake:switch:nix-darwin:
    desc: Switches to the MacOS flake
    dir: '{{.NIX_DARWIN_FLAKE_PATH}}'
    cmds:
      - nix run nix-darwin --extra-experimental-features "nix-command flakes" -- switch --flake .#macbook

  nix:flake:rebuild:nix-darwin:
    desc: Rebuilds the MacOS flake
    dir: '{{.NIX_DARWIN_FLAKE_PATH}}'
    cmds:
      - darwin-rebuild switch --flake .#macbook

  nix:flake:rebuild:nix-darwin:dry-run:
    desc: Rebuilds the MacOS flake
    dir: '{{.NIX_DARWIN_FLAKE_PATH}}'
    cmds:
      - darwin-rebuild switch --flake .#macbook --dry-run

  nix:flake:update:nix-darwin:
    desc: Updates the MacOS flake lock file
    dir: '{{.NIX_DARWIN_FLAKE_PATH}}'
    cmds: 
      - nix flake update

  nix:flake:format:
    desc: Formats MacOS flake file
    dir: '{{.NIX_DARWIN_FLAKE_PATH}}'
    cmds: 
      - nixfmt flake.nix
